namespace Tangle.Net.Mam.Unit.Tests.Merkle
{
  using Microsoft.VisualStudio.TestTools.UnitTesting;

  using Tangle.Net.Cryptography;
  using Tangle.Net.Entity;
  using Tangle.Net.Mam.Merkle;

  /// <summary>
  /// The merkle tree tests.
  /// </summary>
  [TestClass]
  public class MerkleTreeTests
  {
    #region Public Methods and Operators

    /// <summary>
    /// The test get tree by index builds new tree corretcly.
    /// </summary>
    [TestMethod]
    public void TestGetTreeByIndexBuildsNewTreeCorretcly()
    {
      var seed = new Seed("L9DRGFPYDMGVLH9ZCEWHXNEPC9TQQSA9W9FZVYXLBMJTHJC9HZDONEJMMVJVEMHWCIBLAUYBAUFQOMYSN");
      var factory = new CurlMerkleTreeFactory(new CurlMerkleNodeFactory(new Curl()), new CurlMerkleLeafFactory(new AddressGenerator(seed)));
      var tree = factory.Create(seed, 0, 10, SecurityLevel.Medium);
      var treeFromIndex = tree.GetSubtreeByIndex(5);

      Assert.AreEqual(

        treeFromIndex.Key.Value);

      var merkleNodes = treeFromIndex.Leaves;
      Assert.AreEqual(4, merkleNodes.Count);
      Assert.AreEqual("QKNPTETOXQRZYVSCYOTNRZFGKGGMIPYTZARBTZIOMULXWNTXKWIRQEL9JFDKLPZYZNNBQAXNBNX9DFNSD", merkleNodes[0].Hash.Value);
      Assert.AreEqual("NXSMQXNPJMBECTBQQFYYPHXBHXJEKEJAHMWOCHOOON9ZBDSECWQLPSIMQTYZQBWDVMTYEZLXHJZSYJH9E", merkleNodes[1].Hash.Value);
      Assert.AreEqual("NVPRSBAZVMYYOLVKWPSZIAECBRINZ9CXWBGYVPVCVYLXOBUIJWXPUSOCTHQOVYFHKUFHCCKHWAEQPIRKD", merkleNodes[2].Hash.Value);
      Assert.AreEqual("VTGYAQMLCYKTXBYNDKHCHJFWDFCPHO99GRMJVEVPOEWQPHJWDUJ9YBOBDNAQBSFKFHWFDDMCECHITZAKK", merkleNodes[3].Hash.Value);

      Assert.AreEqual("QKNPTETOXQRZYVSCYOTNRZFGKGGMIPYTZARBTZIOMULXWNTXKWIRQEL9JFDKLPZYZNNBQAXNBNX9DFNSDNXSMQXNPJMBECTBQQFYYPHXBHXJEKEJAHMWOCHOOON9ZBDSECWQLPSIMQTYZQBWDVMTYEZLXHJZSYJH9ENVPRSBAZVMYYOLVKWPSZIAECBRINZ9CXWBGYVPVCVYLXOBUIJWXPUSOCTHQOVYFHKUFHCCKHWAEQPIRKDVTGYAQMLCYKTXBYNDKHCHJFWDFCPHO99GRMJVEVPOEWQPHJWDUJ9YBOBDNAQBSFKFHWFDDMCECHITZAKK", treeFromIndex.ToTryteString().Value);
    }

    #endregion
  }
}